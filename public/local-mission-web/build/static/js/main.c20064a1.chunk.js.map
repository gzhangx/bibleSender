{"version":3,"sources":["components/api.js","components/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["getUrl","path","request","require","get","doGetOp","url","send","then","r","doPostOp","data","post","getData","sql","a","Expenses","useState","categories","setCategories","curCategory","setCurCategory","payee","setPayee","amount","setAmount","files","setFiles","useEffect","getCategories","res","length","name","Form","Group","controlId","Label","Control","as","placeholder","value","onChange","e","target","Text","className","type","DropdownButton","title","map","l","ind","Dropdown","Item","onSelect","f","Row","Col","buffer","Button","onClick","filter","fl","reader","FileReader","onload","result","concat","readAsDataURL","variant","emailExpense","categary","attachements","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c20064a1.chunk.js","sourcesContent":["//import { get } from 'superagent';\r\n\r\nconst apiBase = 'http://192.168.1.40:8080';\r\n//const apiBase='http://localhost:8080';\r\nconst getUrl=path => `${apiBase}/localMission/${path}`;\r\nconst request = require('superagent');\r\nconst get = require('lodash/get');\r\n\r\n\r\nfunction doGetOp(url) {\r\n    return request.get(url).send().then(r => get(r, 'body'));\r\n}\r\nfunction doPostOp(url, data) {\r\n    return request.post(url).send(data).then(r => get(r, 'body'));\r\n}\r\n \r\nexport async function getData(sql) {\r\n    return doGetOp(getUrl(sql));\r\n}\r\n\r\nexport async function getCategories() {\r\n    return getData('getCategory');\r\n}\r\n\r\nexport async function emailExpense(data) {\r\n    return doPostOp(getUrl('emailExpense'), data);\r\n}\r\n\r\n/*\r\nmodule.exports = {\r\n    getData,\r\n    getModel,\r\n    sqlGet,\r\n    sqlAdd,\r\n    sqlDelete,\r\n    sqlGetTables,\r\n    sqlGetTableInfo,\r\n    sqlFreeForm,\r\n    sendEmail,\r\n};\r\n*/\r\n","import React, {useState, useEffect} from 'react';\r\nimport { DropdownButton, Dropdown, Form, Button, Row, Col} from 'react-bootstrap';\r\nimport { getCategories, emailExpense } from './api';\r\nexport function Expenses() {\r\n    const [categories, setCategories] = useState([]);\r\n    const [curCategory, setCurCategory] = useState('');\r\n    const [payee, setPayee] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [files, setFiles] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getCategories().then(res => {\r\n            setCategories(res);\r\n            if (res.length) {\r\n                setCurCategory(res[0].name);\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    return <div>\r\n        \r\n        <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Payee</Form.Label>\r\n                <Form.Control as=\"input\" placeholder=\"Payee\" value={payee} onChange={e => {\r\n                    setPayee(e.target.value)\r\n                }} />\r\n                <Form.Text className=\"text-muted\">\r\n                    User to be paid\r\n                </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"Amount\">\r\n                <Form.Label>Amount</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"Amount\" value={amount} onChange={e => {\r\n                    setAmount(e.target.value);\r\n                }} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicCheckbox\">                \r\n            </Form.Group>\r\n            <DropdownButton title={curCategory} >\r\n                {\r\n                    categories.map((l, ind) => {\r\n                        return <Dropdown.Item key={ind} onSelect={() => setCurCategory(l.name)}>{l.name}</Dropdown.Item>\r\n                    })\r\n                }\r\n            </DropdownButton>            \r\n            {\r\n                files.map(f => {\r\n                    return <Row><Col>{f.name}</Col><Col>{f.buffer.length}</Col><Col><Button onClick={\r\n                        () => {\r\n                            setFiles(files.filter(fl=>fl.name !== f.name))\r\n                        }\r\n                    }>Delete</Button></Col></Row>\r\n                })\r\n            }\r\n            <input type=\"file\" name=\"newFile\" onChange={e => {                \r\n                const name = e.target.value;\r\n                if (files.filter(f => f.name === name).length) return;\r\n                const reader = new FileReader();\r\n                reader.onload = function () {\r\n                    const buffer = reader.result;                    \r\n                    setFiles(files.concat({\r\n                        name: e.target.value,\r\n                        buffer,\r\n                    }))\r\n                };\r\n                reader.readAsDataURL(e.target.files[0]);\r\n            }}/>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                emailExpense({ amount, payee, categary: curCategory, attachements: files });\r\n            }}>\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    </div>\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Expenses} from './components/Expenses'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">        \n      </header>\n      <Expenses></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}